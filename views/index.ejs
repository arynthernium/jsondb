<!DOCTYPE html>
<html>
  <head>
    <title>jsonDB</title>
    <style>
		body {
			background-color: #050505;
			color: #ddd;
		}
		.entry {
			background-color: #202020;
			padding: 2%;
			color: #ddd;
			outline: none;
			border: 2px solid #333;
			border-radius: 15px;
			margin: 5px;
			display: block;
			width: 30%;
		}
		.requestbox {
			border: 2px solid #333;
			border-radius: 15px;
		}
		#main {
			display: none;
		}
		#entryviewer {
			position: absolute;
			right: 0;
			top: 0;
			height: 100%;
			width: 50%;
			background-color: #606060;
		}
    </style>
    <script src="../../socket.io/socket.io.js"></script>
  </head>
  <body>
	  <div id="main">

	<div id="entrylist">
	</div>

	<div id="requestbox">
		<textarea id="requestidbox" placeholder="request id..."></textarea>
		<button id="requestbutton" onclick="requestEntry()">request entry</button>
		<div id="returnEntryBox"></div>
	</div>

	<div id="newEntryBox">
		<textarea id="newEntryInput"></textarea>
		<button onclick="newEntry()">new entry</button>
	</div>
	<div id="entryviewer">
		
	</div>
	</div>
    <script>
            var socket = io.connect('http://localhost:8080');

            // append text if someone is online
			socket.on('login', function(entriesdata) {
				entries = JSON.parse(entriesdata)

				entries.forEach(entry => {
					console.log(JSON.stringify(entry));

					var entrynode = document.createElement(`button`);
					entrynode.classList.add('entry');
					entrynode.innerHTML = `${entry.name}`;
					entrynode.onclick = function() {
						alert(`${JSON.stringify(entry)}`);
					}; // to be replaced with a view function
					var entrylist = document.getElementById('entrylist');
					entrylist.appendChild(entrynode);

					document.getElementById('main').style.display = 'initial';
				});
	        });

			socket.on('fail', function(entriesdata) {
				console.log('password incorrect')
	        });

			socket.on('listEntry', function(entry) {
				var entrynode = document.createElement(`button`);
				entrynode.classList.add('entry');
				entrynode.innerHTML = `${entry.name}`;
				entrynode.onclick = function() {
					alert(`${JSON.stringify(entry)}`);
				};
				var entrylist = document.getElementById('entrylist');
				entrylist.appendChild(entrynode);
	        });

			socket.on('prompt', function() {
				var password = prompt('password');
				socket.emit('password', password);
			});

			function requestEntry() {
				requestid = document.getElementById('requestidbox').value;
				socket.emit('request', requestid);
			}

			socket.on('returnEntry', function(returnjson) {
				console.log(returnjson);
				returnjson = JSON.parse(returnjson);

				returnjson.forEach(entry => {
					console.log(JSON.stringify(entry));

					var entrynode = document.createElement(`button`);
					entrynode.classList.add('entry');
					entrynode.innerHTML = `${entry._id}`;
					entrynode.onclick = function() {
						alert(`${JSON.stringify(entry)}`);
					};
					var entrylist = document.getElementById('returnEntryBox');
					entrylist.appendChild(entrynode);
				});
			});

			function newEntry() {
				entry = document.getElementById('newEntryInput').value;
				socket.emit('writeEntry', entry);
			}
    </script>
  </body>
</html>